cmake_minimum_required(VERSION 3.11) # FetchContent requires CMake 3.11 or higher

# Include FetchContent module
include(FetchContent)

# Set project name if not already defined
project(FlappyBirdGame)

# Add the executable target
add_executable(${FLAPPY_BIRD_GAME_TARGET_NAME}
    ${CMAKE_CURRENT_SOURCE_DIR}/src/AssetManager.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/bird.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/collision.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Game.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/inputManager.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/land.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/pipe.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/StateMachine.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/GameState.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/State.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/SplashState.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/MainMenuState.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/Flash.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/HUD.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/src/GameOverState.cpp
)

# Include directory for header files
target_include_directories(${FLAPPY_BIRD_GAME_TARGET_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/inc)

# SFML Setup
FetchContent_Declare(
    SFML
    GIT_REPOSITORY https://github.com/SFML/SFML
    GIT_TAG 2.5.1
    GIT_SHALLOW FALSE
)
FetchContent_MakeAvailable(SFML)

# Box2D Setup
FetchContent_Declare(
    Box2D
    GIT_REPOSITORY https://github.com/erincatto/box2d
    GIT_TAG v2.4.1
    GIT_SHALLOW FALSE
)
FetchContent_MakeAvailable(Box2D)

# Link libraries AFTER target definition
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    # Debug libraries
    set(SFML_LIBS sfml-graphics-d sfml-window-d sfml-system-d sfml-audio-d sfml-network-d)
else()
    # Release libraries
    set(SFML_LIBS sfml-graphics sfml-window sfml-system sfml-audio sfml-network)
endif()

# Link SFML and Box2D to the target
target_link_libraries(
    ${FLAPPY_BIRD_GAME_TARGET_NAME} PUBLIC
    ${SFML_LIBS} box2d
)

# Add sfml-main for Windows
if(WIN32)
    target_link_libraries(${FLAPPY_BIRD_GAME_TARGET_NAME} PRIVATE sfml-main)
endif()

# Function to copy runtime libraries
function(CopyLibToTarget LIB_NAME TARGET_NAME)
    add_custom_command(TARGET ${TARGET_NAME}
        POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            $<TARGET_FILE:${LIB_NAME}>
            $<TARGET_FILE_DIR:${TARGET_NAME}>
    )
endfunction()

# Copy each SFML library and Box2D after build
foreach(SFML_LIB ${SFML_LIBS})
    CopyLibToTarget(${SFML_LIB} ${FLAPPY_BIRD_GAME_TARGET_NAME})
endforeach()
CopyLibToTarget(box2d ${FLAPPY_BIRD_GAME_TARGET_NAME})

# Output directory settings (optional, for clarity)
set_target_properties(${FLAPPY_BIRD_GAME_TARGET_NAME} PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
)
